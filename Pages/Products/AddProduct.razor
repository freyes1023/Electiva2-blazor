@page "/addproduct"
@inject IProductService ProductService;
@inject ICategoryService categoryService;
@inject NavigationManager NavigationManager;

<PageTitle>Add - Product</PageTitle>

<ModuleTitle Title="Add Product" />

<button class="btn btn-dark" type="button" @onclick="@(()=> NavigationManager.NavigateTo("/product"))">Go Back Product</button>

<EditForm Model="@product" OnSubmit="Save" >
    <div class="row">
        <div class="col-8 form-group">
            <label for="tittle" class="col-form-label">Title</label>
            <InputText id="tittle" @bind-Value="product.Title" required class="form-control"/>
        </div>
        <div class="col form-group">
            <label for="price" class="col-form-label">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" min="0" required class="form-control"/> 
        </div>
    </div>
    
    <div class="row">
        <div class="col form-group">
            <label for="category" class="col-form-label">Category</label>
            <InputSelect id="category" @bind-Value="product.CategoryId" required class="form-control" >
            @foreach (var category in categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
            </InputSelect>
        </div>
        <div class="col form-group">
            <label for="image" class="col-form-label">Image (Url)</label>
            <InputText id="image" @bind-Value="product.Image" required class="form-control"/>
        </div>
    </div>

    <div class="form-group">
            <label for="description" class="col-form-label">Description</label>
            <InputText id="description" @bind-Value="product.Description" required class="form-control"/>
    </div>  
    
    <hr/>
    <button class="btn btn-primary" type="submit" >Save</button>
    
    <Alert Color="AlertColor.Primary"> A simple primary alert - check it out! </Alert>
</EditForm>

@code 
{
    private Product product = new();
    private List<Category> categories = new List<Category>();
    protected override async Task OnInitializedAsync()
    {
        categories = await categoryService.Get();
    }
    private async Task Save()
    {
        product.Images = new string[1] { product.Image };
        await ProductService.Add(product);
        NavigationManager.NavigateTo("/product"); 
    }
}